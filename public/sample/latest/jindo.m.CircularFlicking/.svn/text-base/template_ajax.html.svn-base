<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, user-scalable=no, target-densitydpi=medium-dpi">
<title>jindo.m.Circular Template</title>

<link type="text/css" rel="stylesheet" href="../../../doc/resource/syntaxhighlighter/style/shCore.css"/>
<link type="text/css" rel="stylesheet" href="../../../doc/resource/syntaxhighlighter/style/shThemeEclipse.css"/>
<script type="text/javascript" src="../../../doc/resource/syntaxhighlighter/scripts/shCore.js"></script>
<script type="text/javascript" src="../../../doc/resource/syntaxhighlighter/scripts/shBrushCss.js"></script>
<script type="text/javascript" src="../../../doc/resource/syntaxhighlighter/scripts/shBrushDiff.js"></script>
<script type="text/javascript" src="../../../doc/resource/syntaxhighlighter/scripts/shBrushJScript.js"></script>
<script type="text/javascript" src="../../../doc/resource/syntaxhighlighter/scripts/shBrushPhp.js"></script>
<script type="text/javascript" src="../../../doc/resource/syntaxhighlighter/scripts/shBrushPlain.js"></script>
<script type="text/javascript" src="../../../doc/resource/syntaxhighlighter/scripts/shBrushXml.js"></script> 

<script type="text/javascript">
	SyntaxHighlighter.config.tagName = 'textarea';
	SyntaxHighlighter.config.clipboardSwf = '../../../doc/resource/syntaxhighlighter/scripts/clipboard.swf';
	SyntaxHighlighter.all();
</script>

<style>
body,p,h1,h2,h3,h4,h5,h6,ul,ol,li,dl,dt,dd,table,th,td,form,fieldset,legend,input,textarea,button,select{margin:0;padding:0;-webkit-text-size-adjust:none}
body,input,textarea,select,button,table{font-family:'나눔고딕',NanumGothic,'맑은 고딕','Malgun Gothic','돋움',Dotum,'굴림',Gulim,Helvetica,AppleGothic,sans-serif;font-size:14px;line-height:1.25em}
body{position:relative;color:#000;word-wrap:break-word;word-break:break-all;background-color:#f7f7f7}
img,fieldset{border:0}
ul,ol{list-style:none}
body {
	padding:20px 10px 0px 10px;
}

/* CSS 시작*/
/* 플리킹 영역의 높이값을 지정가능합니다 */	
#mflick{position:relative;overflow:hidden;width:100%;height:200px;}
#mflick{border :1px solid #F7F7F7;}
.flick-container{clear:both;}
.flick-panel{float:left;width:100%;height:100%;position:absolute;background-color:#c0c0c0;}


/* 각 패널들의 css를 따로 설정하고 싶을 경우 아래에서 수정해서 사용 합니다 */
.flick-panel:first-child {}
.flick-panel:last-child {}
.flick-panel:nth-child(2){}

/* 각 패널내의 css를 설정합니다 */
.flick-panel p{font-size:2.0em;text-align:center;padding-top:50px;}



/* CSS 끝*/
</style>
</head>
<body>
<h3>ajax 호출하여 컨텐츠를 불러오는  CircularFlicking</h3>
<br/>

<!-- 마크업 부분 시작 -->
<div id="mflick">
	<div class="flick-container">
			<div class="flick-panel" >
				<p>1번째 아이템</p>							
			</div>
			<div class="flick-panel">
				<p>2번째 아이템</p>						
			</div>
			<div class="flick-panel">
				<p>3번째 아이템</p>											
			</div>
	</div>		
</div>	
<!-- 마크업 부분 끝 -->
<br/><br/><br/>
<h3>Templet Source</h3>
<p style="font-size:12px;color:red;padding:10px 20px 0;">
	하단의 코드를 Copy&Paste하여 적용한다.<br/>
	폰트, 너비, 색상 등 스타일 변경이 필요하다면 소스내 주석을 참고하여, 원하는 부분의 스타일을 수정하여 적용한다.
</p>
<textarea class="brush: xml;">
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, user-scalable=no, target-densitydpi=medium-dpi">
<style>
body,p,h1,h2,h3,h4,h5,h6,ul,ol,li,dl,dt,dd,table,th,td,form,fieldset,legend,input,textarea,button,select{margin:0;padding:0;-webkit-text-size-adjust:none}
body,input,textarea,select,button,table{font-family:'나눔고딕',NanumGothic,'맑은 고딕','Malgun Gothic','돋움',Dotum,'굴림',Gulim,Helvetica,AppleGothic,sans-serif;font-size:14px;line-height:1.25em}
body{position:relative;color:#000;word-wrap:break-word;word-break:break-all;background-color:#f7f7f7}
img,fieldset{border:0}
ul,ol{list-style:none}
body {
	padding:20px 10px 0px 10px;
}

/* CircularFlicking CSS 시작*/
/* 플리킹 영역의 높이값을 지정가능합니다 */	
#mflick{position:relative;overflow:hidden;width:100%;height:200px;}
#mflick{border :1px solid #F7F7F7;}
.flick-container{clear:both;}
.flick-panel{float:left;width:100%;height:100%;position:absolute;background-color:#c0c0c0;}

/* 각 패널들의 css를 따로 설정하고 싶을 경우 아래에서 수정해서 사용 합니다 */
.flick-panel:first-child {}
.flick-panel:last-child {}
.flick-panel:nth-child(2){}

/* 각 패널내의 css를 설정합니다 */
.flick-panel p{font-size:2.0em;text-align:center;padding-top:50px;}

</style>
</head>
<body>
<div id="mflick">
	<div class="flick-container">
		<div class="flick-panel" >
				<p>1번째 아이템</p>							
		</div>
		<div class="flick-panel">
				<p>2번째 아이템</p>						
		</div>
		<div class="flick-panel">
				<p>3번째 아이템</p>											
		</div>
	</div>		
</div>	
<!-- - jindo 프레임웍 import -->
<script src="../../../external/jindo/latest/jindo.all.ns.js" charset="utf-8"></script>
<!--
	- JMC(jindo mobile component) import import. 
	  아래 파일들은 선택다운로드(http://jindo.dev.naver.com/docs/jindo-mobile/download/index.html)에서 
	  압축다운로드된 한개의 파일(jindo_mobile_component.js)로 대체 가능하다.
--> 
<script src="../../../external/jindo/latest/jindo.Component.js" charset="utf-8"></script>
<script src="../../../external/jindo/latest/jindo.UIComponent.js" charset="utf-8"></script>
<script src="../../source/jindo.m.js" charset="utf-8"></script>
<script src="../../source/jindo.m.Touch.js" charset="utf-8"></script>
<script src="../../source/jindo.m.CircularFlicking.js" charset="utf-8"></script>
<script type="text/javascript">
var sTpl = '<p>{=TEXT}</p>'	
this.htDataHistory = {};
this.nStartIndex = null;	
this.nCnt = 5; //ajax 호출시에 한번에 가져올 데이터 수
this.nLastHistoryIndex = 0;
this.bPaint = false;
var self = this;

//ajax 통신
var sAjaxUrl = "mockUpData.html"; //ajax 호출을 위한 url
this.oAjax = new jindo.$Ajax(sAjaxUrl, {
	type : 'xhr',
	onload : function(res){
		var data = res.json().aData;
		var nTotal = res.json().nTotal;
		
		for(var i=self.nStartIndex, nLen = self.nStartIndex +self.nCnt; i<nLen; i++){			
			var nIndex = (i > nTotal-1)? i-nTotal: i;			
			self.htDataHistory[nIndex] = data[nIndex];
			//console.log(nIndex);
		}		
		self.nStartIndex = null;
		
		if(self.bPaint){
			self.paintPanel(self.htInfo);
			self.bPaint = false;
		}	
	}
});	

//ajax 호출하여 현재 히스토리에 추가하기
function callAjax(nIndex){
	if(typeof nIndex == 'undefined'){
		nIndex = this.nLastHistoryIndex;
	}
	
	if(typeof this.htDataHistory[(nIndex)] != 'undefined'){ return; }	
	
	this.nStartIndex = nIndex;
	this.nLastHistoryIndex = nIndex+this.nCnt-1;	
	this.oAjax.request({startIndex : nIndex, nDisplay: this.nCnt });
}
//각 패널들의 html 업데이트 하는 함수
function paintPanel(oCustomEvent){
	aElPanel[oCustomEvent.nPanelIndex].innerHTML = sTpl.replace(/{=TEXT}/,self.htDataHistory[oCustomEvent.nContentIndex]);
	aElPanel[oCustomEvent.nPanelRightIndex].innerHTML = sTpl.replace(/{=TEXT}/,self.htDataHistory[oCustomEvent.nContentRightIndex]);
	aElPanel[oCustomEvent.nPanelLeftIndex].innerHTML = sTpl.replace(/{=TEXT}/,self.htDataHistory[oCustomEvent.nContentLeftIndex]);
}

var aElPanel = jindo.$$('.flick-panel', jindo.$('mflick'));

var oCircularFlicking = new jindo.m.CircularFlicking("mflick",{
	nTotalContents : 30//전체 플리킹할 컨텐츠의 수
}).attach({
	'move' : function(oCustomEvent){
		if(typeof self.htDataHistory[oCustomEvent.nContentLeftIndex]  == 'undefined'){
			self.bPaint = true;
			self.htInfo = {
				nContentRightIndex : oCustomEvent.nContentRightIndex,
				nPanelIndex: oCustomEvent.nPanelIndex,
				nPanelRightIndex : oCustomEvent.nPanelRightIndex,
				nPanelLeftIndex : oCustomEvent.nPanelLeftIndex,
				nContentLeftIndex : oCustomEvent.nContentLeftIndex,
				nContentIndex : oCustomEvent.nContentIndex				
			};
			callAjax(oCustomEvent.nContentLeftIndex-1);
		}else{
			paintPanel(oCustomEvent);		
		}
	
	},
	'afterFlicking' : function(oCustomEvent){
		var nCallAjaxIndex = oCustomEvent.nContentRightIndex+1;		
		if(oCustomEvent.bLeft){ //오른쪽 컨텐츠 업데이트
			aElPanel[oCustomEvent.nPanelRightIndex].innerHTML = sTpl.replace(/{=TEXT}/,self.htDataHistory[oCustomEvent.nContentRightIndex]);
		}else{ //왼쪽 컨텐츠 업데이트
			aElPanel[oCustomEvent.nPanelLeftIndex].innerHTML = sTpl.replace(/{=TEXT}/,self.htDataHistory[oCustomEvent.nContentLeftIndex]);
			nCallAjaxIndex = oCustomEvent.nContentLeftIndex-1;
		}
		
		callAjax(nCallAjaxIndex);
	}
});

oCircularFlicking.setContentIndex(0);
</script>
</body>
</html>
</textarea>

<script src="../../../external/jindo/latest/jindo.all.ns.js" charset="utf-8"></script>
<script src="../../../external/jindo/latest/jindo.Component.js" charset="utf-8"></script>
<script src="../../../external/jindo/latest/jindo.UIComponent.js" charset="utf-8"></script>
<script src="../../../source/jindo.m.js" charset="utf-8"></script>
<script src="../../../source/jindo.m.Touch.js" charset="utf-8"></script>
<script src="../../../source/jindo.m.CircularFlicking.js" charset="utf-8"></script>
<script type="text/javascript">
var sTpl = '<p>{=TEXT}</p>'	
this.htDataHistory = {};
this.nStartIndex = null;	
this.nCnt = 5; //ajax 호출시에 한번에 가져올 데이터 수
this.nLastHistoryIndex = 0;
this.bPaint = false;
var self = this;

//ajax 통신
var sAjaxUrl = "mockUpData.html"; //ajax 호출을 위한 url
this.oAjax = new jindo.$Ajax(sAjaxUrl, {
	type : 'xhr',
	onload : function(res){
		var data = res.json().aData;
		var nTotal = res.json().nTotal;
		
		for(var i=self.nStartIndex, nLen = self.nStartIndex +self.nCnt; i<nLen; i++){			
			var nIndex = (i > nTotal-1)? i-nTotal: i;			
			self.htDataHistory[nIndex] = data[nIndex];
			//console.log(nIndex);
		}		
		self.nStartIndex = null;
		
		if(self.bPaint){
			self.paintPanel(self.htInfo);
			self.bPaint = false;
		}	
	}
});	

//ajax 호출하여 현재 히스토리에 추가하기
function callAjax(nIndex){
	if(typeof nIndex == 'undefined'){
		nIndex = this.nLastHistoryIndex;
	}
	
	if(typeof this.htDataHistory[(nIndex)] != 'undefined'){ return; }	
	
	this.nStartIndex = nIndex;
	this.nLastHistoryIndex = nIndex+this.nCnt-1;	
	this.oAjax.request({startIndex : nIndex, nDisplay: this.nCnt });
}

function paintPanel(oCustomEvent){
	aElPanel[oCustomEvent.nPanelIndex].innerHTML = sTpl.replace(/{=TEXT}/,self.htDataHistory[oCustomEvent.nContentIndex]);
	aElPanel[oCustomEvent.nPanelRightIndex].innerHTML = sTpl.replace(/{=TEXT}/,self.htDataHistory[oCustomEvent.nContentRightIndex]);
	aElPanel[oCustomEvent.nPanelLeftIndex].innerHTML = sTpl.replace(/{=TEXT}/,self.htDataHistory[oCustomEvent.nContentLeftIndex]);
}

var aElPanel = jindo.$$('.flick-panel', jindo.$('mflick'));

var oCircularFlicking = new jindo.m.CircularFlicking("mflick",{
	nTotalContents : 30//전체 플리킹할 컨텐츠의 수
}).attach({
	'move' : function(oCustomEvent){
		if(typeof self.htDataHistory[oCustomEvent.nContentLeftIndex]  == 'undefined'){
			self.bPaint = true;
			self.htInfo = {
				nContentRightIndex : oCustomEvent.nContentRightIndex,
				nPanelIndex: oCustomEvent.nPanelIndex,
				nPanelRightIndex : oCustomEvent.nPanelRightIndex,
				nPanelLeftIndex : oCustomEvent.nPanelLeftIndex,
				nContentLeftIndex : oCustomEvent.nContentLeftIndex,
				nContentIndex : oCustomEvent.nContentIndex				
			};
			callAjax(oCustomEvent.nContentLeftIndex-1);
		}else{
			paintPanel(oCustomEvent);		
		}
	
	},
	'afterFlicking' : function(oCustomEvent){
		var nCallAjaxIndex = oCustomEvent.nContentRightIndex+1;		
		
		if(oCustomEvent.bLeft){ //오른쪽 컨텐츠 업데이트
			aElPanel[oCustomEvent.nPanelRightIndex].innerHTML = sTpl.replace(/{=TEXT}/,self.htDataHistory[oCustomEvent.nContentRightIndex]);
			
		}else{ //왼쪽 컨텐츠 업데이트
			aElPanel[oCustomEvent.nPanelLeftIndex].innerHTML = sTpl.replace(/{=TEXT}/,self.htDataHistory[oCustomEvent.nContentLeftIndex]);
			nCallAjaxIndex = oCustomEvent.nContentLeftIndex-1;
		}
				
		callAjax(nCallAjaxIndex);
	}
});

oCircularFlicking.setContentIndex(0);

</script>
</body>
</html>